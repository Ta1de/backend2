{
	"info": {
		"_postman_id": "26213b52-5ebb-4357-9502-15d5bd90481d",
		"name": "Backend2",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "42120328"
	},
	"item": [
		{
			"name": "CreateUser1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID пользователя\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"user_id1\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Анна\",\n  \"surname\": \"Сидорова\",\n  \"birthday\": \"1995-08-20\",\n  \"gender\": \"Female\",\n  \"address\": {\n    \"country\": \"Россия\",\n    \"city\": \"Москва\",\n    \"street\": \"Тверская, 12\"\n  }\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID пользователя\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"user_id2\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Анна\",\n  \"surname\": \"Сидорова\",\n  \"birthday\": \"1995-08-20\",\n  \"gender\": \"Female\",\n  \"address\": {\n    \"country\": \"Россия\",\n    \"city\": \"Казань\",\n    \"street\": \"Тверская, 12\"\n  }\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID пользователя\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"user_id3\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Иван\",\n  \"surname\": \"Петров\",\n  \"birthday\": \"1988-11-15\",\n  \"gender\": \"Male\",\n  \"address\": {\n    \"country\": \"Россия\",\n    \"city\": \"Москва\",\n    \"street\": \"Арбат, 23\"\n  }\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser4",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID пользователя\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"user_id4\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Екатерина\",\n  \"surname\": \"Кузнецова\",\n  \"birthday\": \"1992-06-05\",\n  \"gender\": \"Female\",\n  \"address\": {\n    \"country\": \"Россия\",\n    \"city\": \"Санкт-Петербург\",\n    \"street\": \"Невский проспект, 45\"\n  }\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateUser5",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID пользователя\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"user_id5\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Дмитрий\",\n  \"surname\": \"Васильев\",\n  \"birthday\": \"1990-02-28\",\n  \"gender\": \"Male\",\n  \"address\": {\n    \"country\": \"Россия\",\n    \"city\": \"Екатеринбург\",\n    \"street\": \"Ленина, 10\"\n  }\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteUser",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/user/delete/{{user_id4}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"delete",
						"{{user_id4}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUsers1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/user/users?name=Анна&surname=Сидорова",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"users"
					],
					"query": [
						{
							"key": "name",
							"value": "Анна"
						},
						{
							"key": "surname",
							"value": "Сидорова"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUsers2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/user/users?name=Дмитрий&surname=Васильев",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"users"
					],
					"query": [
						{
							"key": "name",
							"value": "Дмитрий"
						},
						{
							"key": "surname",
							"value": "Васильев"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUsersList1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/user/usersList?limit=2&offset=2",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"usersList"
					],
					"query": [
						{
							"key": "limit",
							"value": "2"
						},
						{
							"key": "offset",
							"value": "2"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetUsersList2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/user/usersList",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"usersList"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateUserAddress",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"country\": \"Россия\",\n  \"city\": \"Москва\",\n  \"street\": \"Тверская, 12\"\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/user/updateAddress/{{user_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"user",
						"updateAddress",
						"{{user_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateSupplier1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID поставщика\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"supplier_id1\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Supplier 1\",\n  \"address\": {\n    \"street\": \"Main St\",\n    \"city\": \"Moscow\",\n    \"zip\": \"12345\"\n  },\n  \"phone_number\": \"123-456-7890\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateSupplier2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID поставщика\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"supplier_id2\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Supplier 2\",\n  \"address\": {\n    \"street\": \"Elm St\",\n    \"city\": \"Saint Petersburg\",\n    \"zip\": \"54321\"\n  },\n  \"phone_number\": \"987-654-3210\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateSupplier3",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID поставщика\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"supplier_id3\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Supplier 3\",\n  \"address\": {\n    \"street\": \"Ocean Drive\",\n    \"city\": \"Novosibirsk\",\n    \"zip\": \"67890\"\n  },\n  \"phone_number\": \"111-222-3333\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateSupplierAddress",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"street\": \"New Street\",\n  \"city\": \"New City\",\n  \"street\": \"00000\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/updateAddress/{{supplier_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"updateAddress",
						"{{supplier_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteSupplier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/delete/{{supplier_id2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"delete",
						"{{supplier_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSupplierList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/supplierList",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"supplierList"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetSupplier",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/supplier/{{supplier_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"supplier",
						"{{supplier_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProduct1",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID продукта\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"product_id1\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Product1\",\n  \"category\": \"Tech\",\n  \"price\": 11.3,\n  \"available_stock\": 500,\n  \"supplierID\": \"{{supplier_id1}}\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateProduct2",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID продукта\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"product_id2\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Product2\",\n  \"category\": \"Food\",\n  \"price\": 110.0,\n  \"available_stock\": 1000,\n  \"supplierID\": \"{{supplier_id3}}\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "ReduceStock",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PATCH",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/updateQuantity?id={{product_id1}}&quantity=50",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"updateQuantity"
					],
					"query": [
						{
							"key": "id",
							"value": "{{product_id1}}"
						},
						{
							"key": "quantity",
							"value": "50"
						}
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": ""
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/{{product_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"{{product_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetProdcutList",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/productList",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"productList"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteProduct",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n  \"name\": \"Product1\",\n  \"category\": \"Tech\",\n  \"price\": 11.3,\n  \"available_stock\": 500,\n  \"supplierID\": \"{{supplier_id1}}\"\n}\n"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/product/delete/{{product_id2}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"product",
						"delete",
						"{{product_id2}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "CreateImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"Сохранение ID изображения\", function () {",
							"    var jsonData = pm.response.json();",
							"    pm.environment.set(\"image_id1\", jsonData.id);",
							"});",
							""
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"{{product_id1}}\",\n    \"image\": \"\"\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/image/create",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"image",
						"create"
					]
				}
			},
			"response": []
		},
		{
			"name": "UpdateImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "PUT",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"{{product_id1}}\",\n    \"image\": \"\"\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/image/updateImage",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"image",
						"updateImage"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/image/{{image_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"image",
						"{{image_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "GetImageByProductId",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [],
				"url": {
					"raw": "http://localhost:5000/api/v1/image/product/{{product_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"image",
						"product",
						"{{product_id1}}"
					]
				}
			},
			"response": []
		},
		{
			"name": "DeleteImage",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "DELETE",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"product_id\": \"{{product_id1}}\",\n    \"image\": \"\"\n}"
				},
				"url": {
					"raw": "http://localhost:5000/api/v1/image/delete/{{image_id1}}",
					"protocol": "http",
					"host": [
						"localhost"
					],
					"port": "5000",
					"path": [
						"api",
						"v1",
						"image",
						"delete",
						"{{image_id1}}"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "user_id1",
			"value": "",
			"type": "string"
		},
		{
			"key": "user_id2",
			"value": "",
			"type": "string"
		}
	]
}